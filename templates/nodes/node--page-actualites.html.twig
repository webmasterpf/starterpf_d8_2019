{# Create classes array. The 'node' class is required for contextual edit links.
Permet d'ajouter des classes dynamiques ou non aux éléments du markup
#}
{% set classes = [
'node',
'node--type-' ~ node.bundle|clean_class

] %}
{% set titre_attribute = create_attribute() %}
{% set taxo_attribute = create_attribute() %}
{% set image_attribute = create_attribute() %}
{% set imagecontainer_attribute = create_attribute() %}
{% set zone1_attribute = create_attribute() %}
{% set zone2_attribute = create_attribute() %}
{% set zone3_attribute = create_attribute() %}
{% set vuebloc_attribute = create_attribute() %}

{% set titre_classes = [
'titre_overlay',
'titre_page',
'titre-' ~ node.bundle|clean_class
]%}
{% set taxo_classes = [
'terme-pole',
'term-' ~ content.field_pole_formation.0.name.value|clean_class
]%}
{% set image_classes = [
'illustration-'~ node.bundle|clean_class,
'image--type-' ~ node.bundle|clean_class

]%}
{% set imagecontainer_classes = [
'imagecontainer',
'type-' ~ node.bundle|clean_class
]
%}
{# 'zone1_layout_9_3',#}
{% set zone1_classes = [
'zone_layout_max_centre',

'type-' ~ node.bundle|clean_class
]
%}
{% set zone2_classes = [
'zone1_layout_6_6',
'type-' ~ node.bundle|clean_class
]
%}
{#'zone2_layout_9_3',#}
{% set zone3_classes = [
'zone2_layout_6_6',
'type-' ~ node.bundle|clean_class
]%}
{# Classes conditionnelles selon l'URL pour utiliser le même templates avec des classes différentes
Possible avec le NiD ou un mot de l'url réécrite.
 #}
{% set uri = path('entity.node.canonical', {'node': node.id}) %}
{# % if 'les-actualites' in url|render|render % #}
{% if '18' in node.id | render | render %}

  {% set vuebloc_classes = [
'liste-actu-presse',
'type-' ~ node.bundle|clean_class
]%}
{% else %}
  {% set vuebloc_classes = [
'liste-vdl',
  'type-' ~ node.bundle|clean_class
  ]%}
{% endif %}

{# BEM inspired class syntax: https://en.bem.info/
   Enable this code if you would like node classes like "article article--layout-teaser", where article is the content type and teaser is the view mode.
{% set classes = classes|merge([
  node.bundle|clean_class,
  view_mode ? node.bundle|clean_class ~ '--layout-' ~ view_mode|clean_class
]) %}
{% set title_classes = [
  node.bundle|clean_class ~ '__title'
] %}
#}
<!--______________NODE TPL POUR PAGE POLE.TPL CUSTOM ________________ -->
<article{{ attributes.addclass(classes).setattribute('id', 'node-'~node.id) }}>

  {% if title_prefix or title_suffix or display_submitted or unpublished or page is empty and label %}
    <header>
      {{ title_prefix }}
      {% if not page and label %}
        <h2{{ title_attributes.addClass(title_classes) }}>
          <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        </h2>
      {% endif %}
      {{ title_suffix }}

      {% if display_submitted %}
        <div class="submitted">
          {{ author_picture }}
          {% trans %}Submitted by
          {{ author_name }}
          on
          {{ date }}{% endtrans %}
          {{ metadata }}
        </div>
      {% endif %}

      {% if not node.published %}
        <p class="node--unpublished">{{ 'Unpublished'|t }}</p>
      {% endif %}
    </header>
  {% endif %}

  <!--______________ ILLUSTRATION et TITRE ________________ -->
  <div {{ imagecontainer_attribute.addClass(imagecontainer_classes).setAttribute('id', 'zone-illustration') }}>

    {% set image_deco = content.field_illus_lycee | render | trim %}
    {% if image_deco or node.label is not empty %}
      <div {{image_attribute.setAttribute('id', 'illustration-pleinepage').addClass(image_classes) }}>
        <h1 {{ titre_attribute.addClass(titre_classes) }}>{{node.label}}</h1>
        {{ content.field_illus_lycee.0}}
      </div>
    {% endif %}
  </div>
  <!-- /zone-illustration -->

  <!--______________ZONE 1________________ -->
  <div {{ zone1_attribute.addClass(zone1_classes).setAttribute('id', 'zone-1') }}>

    <div{{ content_attributes.addclass('content') }}>

      {{ content.body }}

    </div>
    <!-- /.content -->
    {% if node.field_inserer_liste_viewfield is not empty %}
      <aside {{ vuebloc_attribute.addClass(vuebloc_classes) }}>
        {{ content.field_inserer_liste_viewfield.0 }}
      </aside>
    {% endif %}
  </div>
  <!-- /zone-1-->

</article>
<!-- /.node -->